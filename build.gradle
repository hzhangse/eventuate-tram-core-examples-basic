buildscript {
    repositories {
     	mavenLocal()
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "com.avast.gradle:gradle-docker-compose-plugin:0.9.2"
    }
}

allprojects {
    group = "io.eventuate.tram.examples.basic"
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
     	mavenLocal()
        mavenCentral()
        jcenter()
        eventuateMavenRepoUrl.split(',').each { repoUrl -> maven { url repoUrl } }
    }
    uploadArchives {
        repositories {
            mavenDeployer {
                repository(url: deployUrl)
                pom.project {
                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }
                }
            }
        }
    }    
}


//task wrapper(type: Wrapper) {
   // gradleVersion = '3.5'
//}

apply plugin: 'docker-compose'

dockerCompose {
    environment.put "EVENTUATE_COMMON_VERSION", eventuateCommonImageVersion
    environment.put "EVENTUATE_KAFKA_VERSION", eventuateMessagingKafkaImageVersion
    environment.put "EVENTUATE_CDC_VERSION", eventuateCdcImageVersion

    mysqlbinlog {
        projectName = null
        useComposeFiles = ["docker-compose-mysql-binlog-hzhangse.yml"]
    }

    mysqlbinlogdb {
        projectName = null
        useComposeFiles = ["docker-compose-mysql-binlog-hzhangse.yml"]
        startedServices = ["mysql"]
    }

    postgrespolling {
        projectName = null
        useComposeFiles = ["docker-compose-postgres-polling.yml"]
    }

    postgrespollingdb {
        projectName = null
        useComposeFiles = ["docker-compose-postgres-polling.yml"]
        startedServices = ["postgres"]
    }

    postgreswal {
        projectName = null
        useComposeFiles = ["docker-compose-postgres-wal.yml"]
    }

    postgreswaldb {
        projectName = null
        useComposeFiles = ["docker-compose-postgres-wal.yml"]
        startedServices = ["postgres"]
    }
}